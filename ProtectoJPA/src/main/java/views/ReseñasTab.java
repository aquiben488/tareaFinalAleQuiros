/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

/**
 *
 * @author ale
 */
public class Rese√±asTab extends javax.swing.JPanel {
    
    /*
     * TODO - DISE√ëO INTERFAZ RESE√ëAS (CENTRO DE VISUALIZACI√ìN):
     * - JList o JTable para mostrar rese√±as (videojuego, usuario, puntuaci√≥n, comentario, √∫tiles)
     * - Sidebar derecho con filtros m√∫ltiples:
     *   * JComboBox para filtro por videojuego
     *   * JComboBox para filtro por usuario
     *   * JSpinner para puntuaci√≥n m√≠nima
     *   * JCheckBox "Mostrar spoilers" (usar parent.isMostrarSpoilers())
     * - JComboBox de ordenamiento (fecha, √∫tiles, puntuaci√≥n)
     * - JButton "Buscar" para aplicar filtros
     * - JButton "Reset (‚ùå)" para mostrar todas las rese√±as
     * - JButton "üëç √ötil" en cada rese√±a para dar upvote
     * 
     * TODO - FUNCIONALIDAD:
     * - Cargar rese√±as con Rese√±aController.buscarTodos()
     * - Filtros: Rese√±aController.buscarPorVideojuego(), buscarPorUsuario(), etc.
     * - Implementar mostrarRese√±asDeJuego() para navegaci√≥n desde JuegosTab
     * - Implementar mostrarRese√±asDeUsuario() para navegaci√≥n desde UsuariosTab
     * - Upvotes: Rese√±aController.marcarComoUtil()
     * - Filtro spoilers: ocultar rese√±as con spoilers si parent.isMostrarSpoilers() == false
     * - Ordenamiento local de la lista mostrada
     */
    
    private MainFrame parent;
    
    /**
     * Creates new form Rese√±asTab
     */
    public Rese√±asTab() {
        initComponents();
    }
    
    /**
     * Constructor con referencia al MainFrame padre
     */
    public Rese√±asTab(MainFrame parent) {
        this();
        this.parent = parent;
    }
    
    /**
     * Mostrar rese√±as de un videojuego espec√≠fico
     */
    public void mostrarRese√±asDeJuego(models.Videojuego juego) {
        // TODO: Implementar filtrado por videojuego
    }
    
    /**
     * Mostrar rese√±as de un usuario espec√≠fico
     */
    public void mostrarRese√±asDeUsuario(models.Usuario usuario) {
        // TODO: Implementar filtrado por usuario
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
